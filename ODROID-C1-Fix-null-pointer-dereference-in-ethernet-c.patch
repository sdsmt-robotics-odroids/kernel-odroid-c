From 4445fc137054b5392991666d42241e5159afad0b Mon Sep 17 00:00:00 2001
From: Scott K Logan <logans@cottsay.net>
Date: Tue, 1 Dec 2015 02:45:17 -0800
Subject: [PATCH] ODROID-C1: Fix null pointer dereference in ethernet code

---
 drivers/amlogic/efuse/efuse.c         | 28 +++++++++++++++++-----------
 drivers/amlogic/ethernet/am_net8218.c | 10 +++++++---
 2 files changed, 24 insertions(+), 14 deletions(-)

diff --git a/drivers/amlogic/efuse/efuse.c b/drivers/amlogic/efuse/efuse.c
index a29a742..1d5fe67 100644
--- a/drivers/amlogic/efuse/efuse.c
+++ b/drivers/amlogic/efuse/efuse.c
@@ -242,19 +242,18 @@ static const struct file_operations efuse_fops = {
 #define MACCHAR(x)	(('A' <= (x) && (x) <= 'F') \
 				? (x) - 'A' + 'a' : (x))
 
-static char *aml_efuse_mac(void)
+static int aml_efuse_mac(unsigned char* hwmac)
 {
-	char hwmac[20];
 	char buf[80];
         char mac_mask;
 	efuseinfo_item_t info;
 
 	if (efuse_getinfo_byID(EFUSE_MAC_ID, &info) < 0)
-		return 0;
+		return -EINVAL;
 
 	if (efuse_read_item(buf, info.data_len,
 				(loff_t*)&info.offset) < 0)
-		return 0;
+		return -EINVAL;
 
 	sprintf(hwmac, "%02x:%02x:%02x:%02x:%02x:%02x",
 			buf[0], buf[1], buf[2], buf[3], buf[4], buf[5]);
@@ -276,12 +275,11 @@ static char *aml_efuse_mac(void)
                         MACCHAR(buf[14]), MACCHAR(buf[15]));
         }
 
-	return hwmac;
+	return 0;
 }
 
-unsigned char *aml_efuse_get_item(unsigned char* key_name)
+unsigned int aml_efuse_get_item(unsigned char* key_name, unsigned char* data)
 {
-        unsigned char *ret = 0;
 	int id;
 
         if(strcmp(key_name,"mac")==0)           id = EFUSE_MAC_ID;
@@ -290,21 +288,29 @@ unsigned char *aml_efuse_get_item(unsigned char* key_name)
         else if(strcmp(key_name,"usid")==0)     id = EFUSE_USID_ID;
         else {
                 pr_info("%s: UNKNOWN key_name\n",	__func__);
-		return 0;
+		return -EINVAL;
         }
 
 	if (id == EFUSE_MAC_ID) {
-		return aml_efuse_mac();
+		return aml_efuse_mac(data);
+	}
+	else
+	{
+		return -EINVAL;
 	}
 
-        return ret;
+        return 0;
 }
 EXPORT_SYMBOL(aml_efuse_get_item);
 
 /* Sysfs Files */
 static ssize_t mac_show(struct class *cla, struct class_attribute *attr, char *buf)
 {
-	return sprintf(buf, "%s\n", aml_efuse_mac());
+	unsigned char hwmac[20] = "00:00:00:00:00:00";
+
+	aml_efuse_mac(hwmac);
+
+	return sprintf(buf, "%s\n", hwmac);
 }
 
 static ssize_t mac_wifi_show(struct class *cla, struct class_attribute *attr, char *buf)
diff --git a/drivers/amlogic/ethernet/am_net8218.c b/drivers/amlogic/ethernet/am_net8218.c
index c39df30..1a29f7d 100644
--- a/drivers/amlogic/ethernet/am_net8218.c
+++ b/drivers/amlogic/ethernet/am_net8218.c
@@ -117,7 +117,7 @@ static int reset_mac(struct net_device *dev);
 static void am_net_dump_macreg(void);
 static void read_macreg(void);
 void hardware_reset_phy(void);
-extern char *aml_efuse_get_item(unsigned char* key_name);
+extern int aml_efuse_get_item(unsigned char* key_name, unsigned char* data);
 
 /* --------------------------------------------------------------------------*/
 /**
@@ -1351,10 +1351,14 @@ static void config_mac_addr(struct net_device *dev, void *mac)
 static void mac_from_efuse_to_DEFMAC(void)
 {
 	unsigned char mac[6];
-	unsigned char *efuse_mac;
+	unsigned char efuse_mac[20];
 	int i;
 	
-	efuse_mac = aml_efuse_get_item("mac");
+	if (aml_efuse_get_item("mac", efuse_mac) < 0)
+        {
+		return;
+        }
+
 	for (i = 0; i < 6 && efuse_mac[0] != '\0' && efuse_mac[1] != '\0'; i++) {
 		mac[i] = chartonum(efuse_mac[0]) << 4 | chartonum(efuse_mac[1]);
 		efuse_mac += 3;
-- 
2.1.0

